# 项目相关配置
project:
  # 名称
  name: ai-blog-platform
  # 版本
  version: 1.0.0

# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # 连接数满后的排队数，默认为100
    accept-count: 1000
    threads:
      # tomcat最大线程数，默认为200
      max: 800
      # Tomcat启动初始化的线程数，默认值10
      min-spare: 100

# 日志配置
logging:
  config: classpath:logback-dev.xml
  level:
    com.smart: debug
    org.springframework: warn


# Spring配置
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 主库数据源
      master:
        url: jdbc:mysql://127.0.0.1:3306/ai-blog-platform?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
        username: root
        password: root
      # 从库数据源
      slave:
        # 从数据源开关/默认关闭
        enabled: false
        url:
        username:
        password:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置连接超时时间
      connectTimeout: 30000
      # 配置网络超时时间
      socketTimeout: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: ai-blog
        login-password: 123456
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: i18n/messages
  # 文件上传
  servlet:
    multipart:
      # 单个文件大小
      max-file-size: 10MB
      # 设置总上传的文件大小
      max-request-size: 20MB

  data:
    # redis 配置
    redis:
      # 地址
      host: localhost
      # 端口，默认为6379
      port: 6379
      # 数据库索引
      database: 0
      # 密码
      password:
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池中的最小空闲连接
          min-idle: 0
          # 连接池中的最大空闲连接
          max-idle: 8
          # 连接池的最大数据库连接数
          max-active: 8
          # #连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
  # mq配置
  rabbitmq:
    host: 101.35.227.29
    port: 5672
    username: rabbitmq-root
    password: rabbitmq-password123
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3 #最大重试次数
          initial-interval: 3000 #重试间隔时间（单位毫秒）
  # 邮箱配置
  mail:
    host: smtp.qq.com
    username: 邮箱用户名
    password: 邮箱授权码
    default-encoding: UTF-8
    port: 587
    properties:
      mail:
      smtp:
      auth: true
      socketFactory:
      class: javax.net.ssl.SSLSocketFactory

  # mybatis-plus
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.ai.**.entity
  global-config:
    db-config:
      id-type: auto
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#  config-location: classpath:mybatis/mybatis-config.xml

# 搜索模式 可选 elasticsearch或mysql
search:
  mode: mysql

# Springdoc配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
#  group-configs:
#    - group: 'common'
#      display-name: '通用'
#      paths-to-match: '/**'
#      packages-to-scan: com.ai.blog.controller.common
#    - group: 'user'
#      display-name: '用户端'
#      paths-to-match: '/**'
#      packages-to-scan: com.ai.blog.controller.web
#    - group: 'admin'
#      display-name: '管理端'
#      paths-to-match: '/**'
#      packages-to-scan: com.ai.blog.controller.admin

# 上传模式 可选 oss或local  （http://和最后的/一定不能去！！！）
upload:
  mode: local
  local:
    # nginx映射本地文件路径，无域名则为 ip:83
    url: http://你的文件上传子域名/
    # 本地文件存储路径
    path: E:/project/java/ai-blog-platform/
  oss:
    url: http://Bucket域名/
    endpoint: OSS配置endpoint
    accessKeyId: OSS配置accessKeyId
    accessKeySecret: OSS配置accessKeySecret
    bucketName: OSS配置bucketName
  cos:
    url: http://Bucket域名/
    secretId: cos的secretId
    secretKey: cos的secretKey
    region: cos的region
    bucketName: cos的bucketName

# 网站前台域名（邮件通知用）
website:
  url: http://你的主域名或ip
# token配置
token:
  # 令牌自定义标识
  header: Authorization
  # 令牌密钥
  secret: xWQMEHVOaz2tdvlnuqVBqEdgXKjYdeE7cbgFTwNjseEELCXLR4XIJ9tKo/KLy0us2ckQr2r990POA6eM655AtA==
  # 令牌有效期（默认30分钟）
  expireTime: 120
#第三方配置信息
qq:
  app-id: QQ APPID
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}

weibo:
  app-id: 微博APPID
  app-secret: 微博APPSECRET
  grant-type: authorization_code
  redirect-url: 微博回调地址
  access-token-url: https://api.weibo.com/oauth2/access_token
  user-info-url: https://api.weibo.com/2/users/show.json?uid={uid}&access_token={access_token}


knife4j:
  enable: true
  setting:
    language: zh-CN
    enable-swagger-models: true
    enable-document-manage: true
    swagger-model-name: 数据模型
  cors: true
  production: false # 生产环境改为true
